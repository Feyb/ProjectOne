@import url(./variables.css);
@import url(./dark-theme.css);

:root {
  --text-color: #000000;
  --accent-color: #0b57d0;
  --accent-secondary-color: #034c88;
  --accent-bg-color: #f3f6fc;
  --bg-color: #ffffff;
  --box-shadow: #00000020;
  --button-color: #ffffff;
}

*:not(dialog) {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  font-family: "Rubik", sans-serif;
}

body {
  font-size: 16px;
  color: var(--text-color);
  background-color: var(--bg-color);
}

h1 {
  margin-bottom: 16px;
}

main {
  padding: 16px;
}

header {
  position: sticky;
  top: 0;
  background-color: var(--bg-color);
  padding: 24px;
}

header.active {
  box-shadow: var(--box-shadow) 0 0.5rem 1rem;
  transition-duration: 400ms;
}

footer {
  position: sticky;
  bottom: 0;
  background-color: var(--bg-color);
  padding: 24px;
}

nav {
  font-size: 1.1rem;
  margin: 0;
  padding: 0;
  list-style-type: none;
  display: flex;
  flex-direction: row;
}

nav button:not(:last-child) {
  margin-right: 8px;
}

.flex-col,
form {
  display: flex;
  flex-direction: column;
  gap: 16px;
}


textarea,
select,
input {
  background-color: var(--accent-bg-color);
}

textarea,
select,
input:not([type="checkbox"]) {
  border: none;
  border-radius: 8px;
  height: var(--elements-height);
  padding: 4px 16px;
  font-size: 16px;
  color: var(--text-color);
}

input[type="checkbox"] {
  height: 1rem;
  width: 1rem;
}

textarea {
  height: 150px;
  padding: 16px;
}

button {
  background-color: var(--accent-color);
  height: var(--elements-height);
  border: none;
  border-radius: var(--border-radius-medium);
  padding: 4px 16px;
  color: var(--button-color);
  text-transform: uppercase;
}

button:hover {
  background-color: var(--accent-secondary-color);
}

.flex-col {
  display: flex;
  flex-direction: column;
  gap: 16px;
}

.flex-row {
  display: flex;
  flex-direction: row;
  gap: 16px;
}

.space-between {
  justify-content: space-between;
}

.stretch {
  align-items: stretch;
  align-items: stretch;
  width: 100%;
}

.wrap {
  flex-wrap: wrap
}


.cards-grid {
  display: grid;
  grid-template-columns: repeat(6, 1fr);
  grid-template-rows: auto;
  grid-column-gap: 16px;
  grid-row-gap: 16px;
}

.finished:not(button) {
  text-decoration: line-through;
}

dialog {
  border: none;
  border-radius: var(--border-radius-big);
  box-shadow: 0px 0px 143px 59px rgba(0, 0, 0, 0.63);
  padding: 1.6rem;
  max-width: 400px;
  background-color: var(--bg-color);
  color: var(--text-color);
}

@media (min-width: 320px) and (max-width: 600px) {
  .cards-grid {
    grid-template-columns: repeat(1, 1fr);
  }
}

@media (min-width: 601px) and (max-width: 1280px) {
  .cards-grid {
    grid-template-columns: repeat(3, 1fr);
  }
}

.card {
  border-radius: var(--border-radius-medium);
  padding: 1rem;
  background-color: var(--accent-bg-color);
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-template-rows: auto;
  gap: 8px 8px;
  grid-auto-flow: row;
  grid-template-areas:
    "title prio"
    "desc desc"
    "created created-value"
    "due due-value"
    "finished cbx"
    "buttons buttons";
}

.card:hover {
  box-shadow: 0 0 0.5rem var(--box-shadow);
}

.title {
  grid-area: title;
  justify-self: stretch;
}

.prio {
  grid-area: prio;
  justify-self: end;
}

.desc {
  grid-area: desc;
  justify-self: stretch;
}

.created {
  grid-area: created;
}

.created-value {
  grid-area: created-value;
}

.due {
  grid-area: due;
}

.due-value {
  grid-area: due-value;
}

.cbx {
  grid-area: finished;
}

.cbx-value {
  grid-area: cbx;
}

.buttons {
  grid-area: buttons;
  justify-self: stretch;
}
